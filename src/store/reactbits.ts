import { createStore } from './createStore';
import { hyperspeedPresets } from '@/utils/reactbitsConfig';
/**
 * 1. ReactbitsÁöÑbackgroundÊúâÂ§ö‰∏™ÂÄºÔºåÁî®‰∏Ä‰∏™MapËøõË°åÁÆ°ÁêÜÔºåÂàáÊç¢Êó∂Â¶ÇÊûúÂú®Map‰∏≠Â≠òÂú®ÔºåÂ∞±ÂàáÊç¢Âà∞ËØ•ÂÄºÔºåÂê¶Âàô‰∏çÂàáÊç¢
 * 2. ‰∏çÂêåÁöÑbackgroundÊúâÂÆÉËá™Â∑±ÁöÑÈÖçÁΩÆÈ°πÔºåÁõÆÂâçÂ∏∏ËßÅÁöÑÈÖçÁΩÆÈ°πÁªÑ‰ª∂ÊúâSelectÔºåSliderÔºåSwitchÔºåÈÄöËøábackgroundMapËøõË°åÁÆ°ÁêÜ
 *    {
 *      Hyperspeed: {
 *        animationPreset: {
 *           value: 'È¢ÑËÆæ1',
 *           type: 'Select',
 *           options: [{ label: 'È¢ÑËÆæ1', value: {.....} }, { label: 'È¢ÑËÆæ2', value: {.....} }]
 *        }
 *      }
 *    }
 *
 */
/**
 * Reactbits Áä∂ÊÄÅÊé•Âè£
 */
type ReactbitsBackground = 'Hyperspeed';

export interface ReactbitsState {
  background: ReactbitsBackground;
  setBackground: (background: ReactbitsBackground) => void;
  backgroundConfig: {
    Hyperspeed: {
      animationPreset: keyof typeof hyperspeedPresets;
    };
  };
  changeBackgroundConfig: (config: {
    Hyperspeed: {
      animationPreset: keyof typeof hyperspeedPresets;
    };
  }) => void;
}

/**
 * Reactbits Áä∂ÊÄÅstore
 */
export const useReactbitsStore = createStore<ReactbitsState>(
  (set, get) => ({
    // ÂàùÂßãÁä∂ÊÄÅ
    background: 'Hyperspeed',
    backgroundConfig: {
      Hyperspeed: {
        animationPreset: 'one'
      }
    },
    // ËÆæÁΩÆËÉåÊôØ
    setBackground: (background: ReactbitsBackground) => {
      set({
        background
      });
    },
    changeBackgroundConfig(config: ReactbitsState['backgroundConfig']) {
      console.log('üåç ~ changeBackgroundConfig ~ config:', config);
      const currentBackground = get().background;
      const currentBackgroundConfig = get().backgroundConfig;
      set({
        backgroundConfig: {
          ...currentBackgroundConfig,
          [currentBackground]: {
            ...(currentBackgroundConfig[currentBackground] || {}),
            ...(config[currentBackground] || {})
          }
        }
      });
    }
  }),
  'reactbits'
);
